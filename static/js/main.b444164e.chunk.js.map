{"version":3,"sources":["components/dropzone/dropzone.module.scss","components/locale-editor/locale-editor.header.module.scss","components/locale-editor/locale-editor.format-helper.module.scss","components/locale-editor/locale-editor.mode.module.scss","components/locale-editor/locale-editor.wrap.module.scss","components/locale-editor/types.ts","components/locale-editor/locale-editor.context-provider.tsx","components/locale-editor/locale-editor.list.tsx","components/locale-editor/locale-editor.mode.tsx","components/dropzone/dropzone.tsx","components/locale-editor/locale-editor.header.tsx","components/locale-editor/locale-editor.wrap.tsx","components/locale-editor/locale-editor.block.tsx","components/locale-editor/locale-editor.format-helper.tsx","components/locale-editor/locale-editor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Modes","LocaleEditorContext","createContext","file","undefined","list","mode","ALL","setFile","setList","setMode","useLocaleEditorContext","useContext","LocaleEditorContextProvider","children","useState","Provider","value","LocaleEditorList","memo","listByMode","useMemo","EMPTY","filter","message","length","height","width","headerHeight","rowHeight","rowStyle","backgroundColor","rowCount","rowGetter","index","onRowClick","e","console","log","label","dataKey","LocaleEditorMode","RadioGroup","className","classes","wrap","aria-label","onChange","_","FormControlLabel","control","Radio","DropZone","disabled","accept","multiple","title","additionalTitle","onDrop","classNameWrap","isInvalid","rest","maxFileNameLength","files","setFiles","uuidv1","id","useDropzone","filesToUpload","allFiles","concat","name","find","fileName","getRootProps","getInputProps","onClose","useCallback","event","stopPropagation","el","i","filesList","map","listItem","Icon","iconClose","onClick","listItem__text","cn","wrap_invalid","about","text_invalid","titleAdditional","LocaleEditorHeader","onDownload","blob","Blob","JSON","stringify","type","saveAs","onUpdateFile","reader","FileReader","readAsText","onload","parse","target","result","useEffect","dropZoneWrap","Button","variant","color","LocaleEditorWrap","PADDING","LocaleEditorBlock","style","padding","LocaleEditorFormatHelper","format","LocaleEditor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b444164e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"dropzone_wrap__1y1Li\",\"wrap_invalid\":\"dropzone_wrap_invalid__1PzmG\",\"title\":\"dropzone_title__3MqY-\",\"titleAdditional\":\"dropzone_titleAdditional__4MYMd\",\"icon\":\"dropzone_icon__1059d\",\"text_invalid\":\"dropzone_text_invalid__23ElU\",\"list\":\"dropzone_list__2h_uD\",\"listItem\":\"dropzone_listItem__3REQG\",\"listItem__text\":\"dropzone_listItem__text__3HMPI\",\"iconClose\":\"dropzone_iconClose__3Ue7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_header_wrap__1BMGf\",\"dropZoneWrap\":\"locale-editor_header_dropZoneWrap__3JzpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_format-helper_wrap__EjLXM\",\"format\":\"locale-editor_format-helper_format__23EiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_mode_wrap__HYoxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_wrap_wrap__1Ie3m\"};","export enum Modes {\n    ALL,\n    EMPTY\n}\n\nexport interface ListItem {\n    message?: string;\n    defaultMessage: string;\n    description: string;\n    files: string[];\n}\n\nexport interface LocaleEditorContextProps {\n    file: File | undefined,\n    list: ListItem[];\n    mode: Modes;\n    setFile: Function;\n    setList: Function;\n    setMode: Function;\n}\n","import React, { FC, createContext, useState, useContext } from 'react';\nimport { Modes, ListItem, LocaleEditorContextProps } from './types';\n\nexport const LocaleEditorContext = createContext<LocaleEditorContextProps>({\n  file: undefined,\n  list: [],\n  mode: Modes.ALL,\n  setFile: () => {},\n  setList: () => {},\n  setMode: () => {},\n});\n\nexport const useLocaleEditorContext = () => useContext(LocaleEditorContext);\n\nexport const LocaleEditorContextProvider: FC = ({\n  children\n}) => {\n  const [file, setFile] = useState<File | undefined>();\n  const [list, setList] = useState<ListItem[]>([]);\n  const [mode, setMode] = useState(Modes.ALL);\n\n  return (\n      <LocaleEditorContext.Provider value={{ file, list, mode, setFile, setList, setMode }}>\n        {children}\n      </LocaleEditorContext.Provider>\n  )\n};\n\n","import React, { memo, FC, useMemo } from 'react';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\nimport 'react-virtualized/styles.css';\nimport { useLocaleEditorContext } from './locale-editor.context-provider';\nimport { Modes } from './types';\n\nexport const LocaleEditorList: FC = memo(() => {\n    const { list, mode } = useLocaleEditorContext();\n\n    const listByMode = useMemo(() => {\n        switch (mode) {\n            case Modes.ALL:\n                return list;\n            case Modes.EMPTY:\n                return list.filter(({ message }) => !message);\n            default:\n                return list;\n        }\n    }, [list, mode]);\n\n    return (\n        <>\n            {!!listByMode.length && (\n                <AutoSizer>\n                    {({ height, width }) => (\n                        <Table\n                            width={width}\n                            height={height}\n                            headerHeight={50}\n                            rowHeight={50}\n                            rowStyle={{ backgroundColor: '#fff' }}\n                            rowCount={listByMode.length}\n                            rowGetter={({ index }) => listByMode[index]}\n                            onRowClick={(e: any) => console.log('e', e)}\n                        >\n                            <Column label=\"id\" dataKey=\"id\" width={width/3} />\n                            <Column label=\"rus\" dataKey=\"defaultMessage\" width={width/3} />\n                            <Column label=\"translation\" dataKey=\"message\" width={width/3} />\n                        </Table>\n                    )}\n                </AutoSizer>\n            )}\n        </>\n    );\n});\n\n","import React, { memo, FC } from 'react';\nimport { RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport { useLocaleEditorContext } from './locale-editor.context-provider';\nimport { Modes } from './types';\nimport classes from './locale-editor.mode.module.scss';\n\nexport const LocaleEditorMode: FC = memo(() => {\n    const { mode, setMode, list } = useLocaleEditorContext();\n    return (\n        <>\n            {!!list.length && (\n                <RadioGroup\n                    className={classes.wrap}\n                    aria-label=\"mode\"\n                    value={mode}\n                    onChange={(_, value) => setMode(+value)}\n                >\n                    <FormControlLabel value={Modes.ALL} control={<Radio />} label=\"All\" />\n                    <FormControlLabel value={Modes.EMPTY} control={<Radio />} label=\"Only empty\" />\n                </RadioGroup>\n            )}\n        </>\n    );\n});\n","import React, {\n    memo,\n    useState,\n    useMemo,\n    useCallback,\n    FC,\n    ReactNode,\n} from 'react';\nimport { v1 as uuidv1 } from 'uuid'\nimport cn from 'classnames';\nimport { Icon } from '@material-ui/core';\nimport { useDropzone } from 'react-dropzone';\nimport classes from './dropzone.module.scss';\nimport { DropZoneProps } from './types';\n\nexport const DropZone: FC<DropZoneProps> = memo(({\n    disabled = false,\n    accept = '',\n    multiple = false,\n    title = '',\n    additionalTitle = '',\n    onDrop = () => {},\n    classNameWrap,\n    isInvalid = false,\n    maxFileNameLength = 30,\n    ...rest\n}) => {\n    const [files, setFiles] = useState<File[]>([]);\n    const [id] = useState<string>(uuidv1());\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept,\n        disabled,\n        multiple,\n        onDrop: (filesToUpload: File[]) => {\n            const allFiles: File[] = multiple\n                ? files.concat(\n                    (filesToUpload || []).filter(\n                        ({ name }) => !files.find(({ name: fileName }) => name === fileName),\n                    ),\n                )\n                : filesToUpload;\n            setFiles(allFiles);\n            onDrop(multiple ? allFiles : allFiles[0]);\n        },\n        ...rest,\n    });\n\n    const onClose = useCallback((event, index: number) => {\n        event.stopPropagation();\n        setFiles((files: File[]) => files.filter((el: File, i: number) => index !== i));\n    }, []);\n\n    const filesList: ReactNode[] = useMemo(() => files.map((file: File, i: number) => (\n        <li key={file.name} className={classes.listItem}>\n            <Icon className={classes.iconClose} onClick={(event) => onClose(event, i)}>close</Icon>\n            <span className={classes.listItem__text}>\n                {file.name}\n            </span>\n        </li>\n    )), [onClose, files]);\n\n    return (\n        <section {...getRootProps({ className: cn(classes.wrap, classNameWrap, { [classes.wrap_invalid]: isInvalid }) })}>\n            <input id={id} {...getInputProps()} />\n            {!!filesList.length && <ul className={classes.list}>{filesList}</ul>}\n            {!filesList.length && (\n                <div className={classes.about}>\n                    <span className={cn(classes.title, { [classes.text_invalid]: isInvalid })}>{title}</span>\n                    {' '}\n                    <span className={cn(classes.titleAdditional, { [classes.text_invalid]: isInvalid })}>{additionalTitle}</span>\n                </div>\n            )}\n        </section>\n    );\n});\n\n","import React, {FC, useCallback, useEffect} from 'react';\nimport { saveAs } from 'file-saver';\nimport { Button } from '@material-ui/core';\nimport { DropZone } from '../dropzone';\nimport classes from './locale-editor.header.module.scss';\nimport { useLocaleEditorContext } from './locale-editor.context-provider';\n\nexport const LocaleEditorHeader: FC = () => {\n    const { list, file, setFile, setList } = useLocaleEditorContext();\n\n    const onDownload = useCallback(() => {\n        const blob = new Blob(\n            [`${JSON.stringify(list, null, 2)}\\n`],\n            {type: \"text/plain;charset=utf-8\"},\n        );\n        saveAs(blob, file?.name);\n    }, [file, list]);\n\n    const onUpdateFile = useCallback(() => {\n        if (file) {\n            const reader = new FileReader();\n            (reader as any).fileName = file?.name;\n            reader.readAsText(file);\n            reader.onload = (event) => {\n                try {\n                    setList(JSON.parse(event?.target?.result as any));\n                } catch (e) {\n                    console.log('e', e);\n                }\n            };\n        }\n    }, [file, setList]);\n\n    useEffect(() => {\n        onUpdateFile();\n    }, [file, onUpdateFile]);\n\n    return (\n        <div className={classes.wrap}>\n            <DropZone\n                classNameWrap={classes.dropZoneWrap}\n                additionalTitle=\"Drag 'n' drop some files here, or click to select files\"\n                onDrop={setFile}\n            />\n            <Button\n                onClick={onDownload}\n                disabled={!file}\n                variant=\"contained\"\n                color=\"secondary\"\n            >\n                Download json\n            </Button>\n        </div>\n    );\n};\n","import React, { FC, memo } from 'react';\nimport classes from './locale-editor.wrap.module.scss';\n\nexport const LocaleEditorWrap: FC = memo(({ children }) => {\n    return (\n        <div className={classes.wrap}>\n            {children}\n        </div>\n    );\n});\n","import React, { memo, FC } from 'react';\n\nexport interface LocaleEditorBlockProps {\n    height: string;\n}\n\nconst PADDING = '20px';\n\nexport const LocaleEditorBlock: FC<LocaleEditorBlockProps> = memo(({ children, height }) => (\n    <div style={{ height: `calc(${height} - ${PADDING})`, padding: PADDING }}>{children}</div>\n));\n","import React, { memo } from 'react';\nimport classes from './locale-editor.format-helper.module.scss';\n\nexport const LocaleEditorFormatHelper = memo(() => (\n    <div className={classes.wrap}>\n        <span>Format: {' '}</span>\n        <span className={classes.format}>\n            {`{ message: string, defaultMessage: string, files: string[], id: string }`}\n        </span>\n    </div>\n));\n","import React, { FC } from 'react';\nimport { LocaleEditorContextProvider } from './locale-editor.context-provider';\nimport { LocaleEditorList } from './locale-editor.list';\nimport { LocaleEditorMode } from './locale-editor.mode';\nimport { LocaleEditorHeader } from './locale-editor.header';\nimport { LocaleEditorWrap } from './locale-editor.wrap';\nimport { LocaleEditorBlock } from './locale-editor.block';\nimport { LocaleEditorFormatHelper } from './locale-editor.format-helper';\n\nexport const LocaleEditor: FC = () => (\n    <LocaleEditorContextProvider>\n        <LocaleEditorWrap>\n            <LocaleEditorBlock height=\"200px\">\n                <LocaleEditorFormatHelper />\n                <LocaleEditorHeader />\n            </LocaleEditorBlock>\n            <LocaleEditorBlock height=\"100% - 200px\">\n                <LocaleEditorMode />\n                <LocaleEditorList />\n            </LocaleEditorBlock>\n        </LocaleEditorWrap>\n    </LocaleEditorContextProvider>\n);\n","import React from 'react';\nimport { LocaleEditor } from './components/locale-editor';\n\nconst App = () => <LocaleEditor />;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}