{"version":3,"sources":["components/locale-editor/types.ts","components/locale-editor/locale-editor.context-provider.tsx","components/locale-editor/locale-editor.list.tsx","components/locale-editor/locale-editor.modal.tsx","utils/form.ts","components/locale-editor/locale-editor.mode.tsx","components/dropzone/dropzone.tsx","components/locale-editor/locale-editor.header.tsx","components/locale-editor/locale-editor.wrap.tsx","components/locale-editor/locale-editor.block.tsx","components/locale-editor/locale-editor.format-helper.tsx","components/locale-editor/locale-editor.tsx","components/toastr/toastr.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/dropzone/dropzone.module.scss","components/locale-editor/locale-editor.modal.module.scss","components/locale-editor/locale-editor.header.module.scss","components/locale-editor/locale-editor.format-helper.module.scss","components/locale-editor/locale-editor.mode.module.scss","components/locale-editor/locale-editor.wrap.module.scss"],"names":["Modes","LocaleEditorContext","createContext","file","undefined","list","mode","ALL","modal","setFile","setList","setMode","setModal","useLocaleEditorContext","useContext","LocaleEditorContextProvider","children","useState","Provider","value","LocaleEditorList","memo","listByMode","useMemo","EMPTY","filter","message","onRowClick","useCallback","e","rowData","length","height","width","headerHeight","rowHeight","rowStyle","backgroundColor","rowCount","rowGetter","index","label","dataKey","LocaleEditorModal","data","onClose","onSubmit","preventDefault","event","newFields","Array","prototype","slice","call","target","el","name","reduce","form","l","map","id","toast","success","JSON","stringify","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Modal","open","className","classes","noValidate","autoComplete","TextField","defaultValue","btns","Button","onClick","variant","type","color","LocaleEditorMode","RadioGroup","wrap","aria-label","onChange","_","FormControlLabel","control","Radio","DropZone","disabled","accept","multiple","title","additionalTitle","onDrop","classNameWrap","isInvalid","rest","maxFileNameLength","files","setFiles","uuidv1","useDropzone","filesToUpload","allFiles","concat","find","fileName","getRootProps","getInputProps","stopPropagation","i","filesList","listItem","Icon","iconClose","listItem__text","cn","wrap_invalid","about","text_invalid","titleAdditional","LocaleEditorHeader","onDownload","blob","Blob","saveAs","onUpdateFile","reader","FileReader","readAsText","onload","parse","result","error","useEffect","dropZoneWrap","LocaleEditorWrap","PADDING","LocaleEditorBlock","style","padding","LocaleEditorFormatHelper","format","LocaleEditor","Toastr","newestOnTop","rtl","pauseOnFocusLoss","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7bd4495b.chunk.js","sourcesContent":["export enum Modes {\n    ALL,\n    EMPTY\n}\n\nexport interface ListItem {\n    message?: string;\n    defaultMessage: string;\n    files: string[];\n    id: string;\n}\n\nexport interface LocaleEditorContextProps {\n    file: File | undefined,\n    list: ListItem[];\n    modal: ListItem | undefined\n    mode: Modes;\n    setFile: Function;\n    setList: Function;\n    setMode: Function;\n    setModal: Function;\n}\n","import React, { FC, createContext, useState, useContext } from 'react';\nimport { Modes, ListItem, LocaleEditorContextProps } from './types';\n\nexport const LocaleEditorContext = createContext<LocaleEditorContextProps>({\n  file: undefined,\n  list: [],\n  mode: Modes.ALL,\n  modal: undefined,\n  setFile: () => {},\n  setList: () => {},\n  setMode: () => {},\n  setModal: () => {},\n});\n\nexport const useLocaleEditorContext = () => useContext(LocaleEditorContext);\n\nexport const LocaleEditorContextProvider: FC = ({\n  children\n}) => {\n  const [file, setFile] = useState<File | undefined>();\n  const [list, setList] = useState<ListItem[]>([]);\n  const [mode, setMode] = useState(Modes.ALL);\n  const [modal, setModal] = useState();\n\n  return (\n      <LocaleEditorContext.Provider value={{ file, list, mode, modal, setFile, setList, setMode, setModal }}>\n        {children}\n      </LocaleEditorContext.Provider>\n  )\n};\n\n","import React, {memo, FC, useMemo, useCallback} from 'react';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\nimport { useLocaleEditorContext } from './locale-editor.context-provider';\nimport { Modes } from './types';\n\nexport const LocaleEditorList: FC = memo(() => {\n    const { list, mode, setModal } = useLocaleEditorContext();\n\n    const listByMode = useMemo(() => {\n        switch (mode) {\n            case Modes.ALL:\n                return list;\n            case Modes.EMPTY:\n                return list.filter(({ message }) => !message);\n            default:\n                return list;\n        }\n    }, [list, mode]);\n\n    const onRowClick = useCallback((e) => {\n        setModal(e?.rowData)\n    }, [setModal]);\n\n    return (\n        <>\n            {!!listByMode.length && (\n                <AutoSizer>\n                    {({ height, width }) => (\n                        <Table\n                            width={width}\n                            height={height}\n                            headerHeight={50}\n                            rowHeight={50}\n                            rowStyle={{ backgroundColor: '#fff' }}\n                            rowCount={listByMode.length}\n                            rowGetter={({ index }) => listByMode[index]}\n                            onRowClick={onRowClick}\n                        >\n                            <Column label=\"id\" dataKey=\"id\" width={width/3} />\n                            <Column label=\"rus\" dataKey=\"defaultMessage\" width={width/3} />\n                            <Column label=\"translation\" dataKey=\"message\" width={width/3} />\n                        </Table>\n                    )}\n                </AutoSizer>\n            )}\n        </>\n    );\n});\n\n","import React, { memo, FC, useMemo, useCallback } from 'react';\nimport { Modal, TextField, Button } from '@material-ui/core';\nimport { toast } from 'react-toastify';\nimport { getFormFields } from '../../utils/form';\nimport { useLocaleEditorContext } from './locale-editor.context-provider';\nimport classes from './locale-editor.modal.module.scss';\nimport { ListItem } from './types';\n\nexport const LocaleEditorModal: FC = memo(() => {\n    const { modal, setModal, setList } = useLocaleEditorContext();\n    const data = useMemo(() => modal || {} as ListItem, [modal]);\n    const onClose = useCallback(() => {\n        setModal(undefined);\n    },[setModal]);\n    const onSubmit = useCallback((e) => {\n        e.preventDefault();\n        const newFields = getFormFields(e);\n        setList(\n            (l: ListItem[]) => l.map(\n                (value) => value?.id === modal?.id\n                    ? { ...value, ...newFields }\n                    : value\n            )\n        );\n        toast.success(`${modal?.id} changed to ${JSON.stringify(newFields)}`, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n        onClose();\n    }, [setList, onClose, modal]);\n    return (\n        <Modal\n            open={!!modal}\n            onClose={onClose}\n        >\n            <form className={classes.modal} noValidate autoComplete=\"off\" onSubmit={onSubmit}>\n                <TextField name=\"message\" label=\"message\" defaultValue={data.message} />\n                <div className={classes.btns}>\n                    <Button onClick={onClose} variant=\"contained\">cancel</Button>\n                    <Button type=\"submit\" variant=\"contained\" color=\"secondary\">save</Button>\n                </div>\n            </form>\n        </Modal>\n    )\n});\n","import { SyntheticEvent } from 'react';\n\nexport const getFormFields = (event: SyntheticEvent) => Array.prototype\n    .slice\n    .call(event?.target)\n    .filter(el => el.name)\n    .reduce((form, el) => ({ ...form, [el.name]: el.value }), {});\n","import React, { memo, FC } from 'react';\nimport { RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport { useLocaleEditorContext } from './locale-editor.context-provider';\nimport { Modes } from './types';\nimport classes from './locale-editor.mode.module.scss';\n\nexport const LocaleEditorMode: FC = memo(() => {\n    const { mode, setMode, list } = useLocaleEditorContext();\n    return (\n        <>\n            {!!list.length && (\n                <RadioGroup\n                    className={classes.wrap}\n                    aria-label=\"mode\"\n                    value={mode}\n                    onChange={(_, value) => setMode(+value)}\n                >\n                    <FormControlLabel value={Modes.ALL} control={<Radio />} label=\"All\" />\n                    <FormControlLabel value={Modes.EMPTY} control={<Radio />} label=\"Only empty\" />\n                </RadioGroup>\n            )}\n        </>\n    );\n});\n","import React, {\n    memo,\n    useState,\n    useMemo,\n    useCallback,\n    FC,\n    ReactNode,\n} from 'react';\nimport { v1 as uuidv1 } from 'uuid'\nimport cn from 'classnames';\nimport { Icon } from '@material-ui/core';\nimport { useDropzone } from 'react-dropzone';\nimport classes from './dropzone.module.scss';\nimport { DropZoneProps } from './types';\n\nexport const DropZone: FC<DropZoneProps> = memo(({\n    disabled = false,\n    accept = '',\n    multiple = false,\n    title = '',\n    additionalTitle = '',\n    onDrop = () => {},\n    classNameWrap,\n    isInvalid = false,\n    maxFileNameLength = 30,\n    ...rest\n}) => {\n    const [files, setFiles] = useState<File[]>([]);\n    const [id] = useState<string>(uuidv1());\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept,\n        disabled,\n        multiple,\n        onDrop: (filesToUpload: File[]) => {\n            const allFiles: File[] = multiple\n                ? files.concat(\n                    (filesToUpload || []).filter(\n                        ({ name }) => !files.find(({ name: fileName }) => name === fileName),\n                    ),\n                )\n                : filesToUpload;\n            setFiles(allFiles);\n            onDrop(multiple ? allFiles : allFiles[0]);\n        },\n        ...rest,\n    });\n\n    const onClose = useCallback((event, index: number) => {\n        event.stopPropagation();\n        setFiles((files: File[]) => files.filter((el: File, i: number) => index !== i));\n    }, []);\n\n    const filesList: ReactNode[] = useMemo(() => files.map((file: File, i: number) => (\n        <li key={file.name} className={classes.listItem}>\n            <Icon className={classes.iconClose} onClick={(event) => onClose(event, i)}>close</Icon>\n            <span className={classes.listItem__text}>\n                {file.name}\n            </span>\n        </li>\n    )), [onClose, files]);\n\n    return (\n        <section {...getRootProps({ className: cn(classes.wrap, classNameWrap, { [classes.wrap_invalid]: isInvalid }) })}>\n            <input id={id} {...getInputProps()} />\n            {!!filesList.length && <ul className={classes.list}>{filesList}</ul>}\n            {!filesList.length && (\n                <div className={classes.about}>\n                    <span className={cn(classes.title, { [classes.text_invalid]: isInvalid })}>{title}</span>\n                    {' '}\n                    <span className={cn(classes.titleAdditional, { [classes.text_invalid]: isInvalid })}>{additionalTitle}</span>\n                </div>\n            )}\n        </section>\n    );\n});\n\n","import React, {FC, useCallback, useEffect} from 'react';\nimport { saveAs } from 'file-saver';\nimport { Button } from '@material-ui/core';\nimport { toast } from 'react-toastify';\nimport { DropZone } from '../dropzone';\nimport classes from './locale-editor.header.module.scss';\nimport { useLocaleEditorContext } from './locale-editor.context-provider';\n\nexport const LocaleEditorHeader: FC = () => {\n    const { list, file, setFile, setList } = useLocaleEditorContext();\n\n    const onDownload = useCallback(() => {\n        const blob = new Blob(\n            [`${JSON.stringify(list, null, 2)}\\n`],\n            {type: \"text/plain;charset=utf-8\"},\n        );\n        saveAs(blob, file?.name);\n    }, [file, list]);\n\n    const onUpdateFile = useCallback(() => {\n        if (file) {\n            const reader = new FileReader();\n            (reader as any).fileName = file?.name;\n            reader.readAsText(file);\n            reader.onload = (event) => {\n                try {\n                    setList(JSON.parse(event?.target?.result as any));\n                } catch (e) {\n                    toast.error(`Error: ${e?.message}`, {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n            };\n        }\n    }, [file, setList]);\n\n    useEffect(() => {\n        onUpdateFile();\n    }, [file, onUpdateFile]);\n\n    return (\n        <div className={classes.wrap}>\n            <DropZone\n                classNameWrap={classes.dropZoneWrap}\n                additionalTitle=\"Drag 'n' drop json here, or click to select file\"\n                onDrop={setFile}\n            />\n            <Button\n                onClick={onDownload}\n                disabled={!file}\n                variant=\"contained\"\n                color=\"secondary\"\n            >\n                Download json\n            </Button>\n        </div>\n    );\n};\n","import React, { FC, memo } from 'react';\nimport classes from './locale-editor.wrap.module.scss';\n\nexport const LocaleEditorWrap: FC = memo(({ children }) => {\n    return (\n        <div className={classes.wrap}>\n            {children}\n        </div>\n    );\n});\n","import React, { memo, FC } from 'react';\n\nexport interface LocaleEditorBlockProps {\n    height: string;\n}\n\nconst PADDING = '20px';\n\nexport const LocaleEditorBlock: FC<LocaleEditorBlockProps> = memo(({ children, height }) => (\n    <div style={{ height: `calc(${height} - ${PADDING})`, padding: PADDING }}>{children}</div>\n));\n","import React, { memo } from 'react';\nimport classes from './locale-editor.format-helper.module.scss';\n\nexport const LocaleEditorFormatHelper = memo(() => (\n    <div className={classes.wrap}>\n        <span>Format: {' '}</span>\n        <span className={classes.format}>\n            {`{ message: string, defaultMessage: string, files: string[], id: string }`}\n        </span>\n    </div>\n));\n","import React, { FC } from 'react';\nimport { LocaleEditorContextProvider } from './locale-editor.context-provider';\nimport { LocaleEditorList } from './locale-editor.list';\nimport { LocaleEditorModal } from './locale-editor.modal';\nimport { LocaleEditorMode } from './locale-editor.mode';\nimport { LocaleEditorHeader } from './locale-editor.header';\nimport { LocaleEditorWrap } from './locale-editor.wrap';\nimport { LocaleEditorBlock } from './locale-editor.block';\nimport { LocaleEditorFormatHelper } from './locale-editor.format-helper';\n\nexport const LocaleEditor: FC = () => (\n    <LocaleEditorContextProvider>\n        <LocaleEditorWrap>\n            <LocaleEditorBlock height=\"200px\">\n                <LocaleEditorFormatHelper />\n                <LocaleEditorHeader />\n            </LocaleEditorBlock>\n            <LocaleEditorBlock height=\"100% - 200px\">\n                <LocaleEditorMode />\n                <LocaleEditorList />\n                <LocaleEditorModal />\n            </LocaleEditorBlock>\n        </LocaleEditorWrap>\n    </LocaleEditorContextProvider>\n);\n","import React, { memo, FC } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nexport const Toastr: FC = memo(() => {\n    return (\n        <ToastContainer\n            position=\"top-right\"\n            autoClose={1000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n        />\n    );\n});\n","import React from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-virtualized/styles.css';\nimport { LocaleEditor } from './components/locale-editor';\nimport { Toastr } from './components/toastr';\n\nconst App = () => (\n    <>\n        <Toastr />\n        <LocaleEditor />\n    </>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"dropzone_wrap__1y1Li\",\"wrap_invalid\":\"dropzone_wrap_invalid__1PzmG\",\"title\":\"dropzone_title__3MqY-\",\"titleAdditional\":\"dropzone_titleAdditional__4MYMd\",\"icon\":\"dropzone_icon__1059d\",\"text_invalid\":\"dropzone_text_invalid__23ElU\",\"list\":\"dropzone_list__2h_uD\",\"listItem\":\"dropzone_listItem__3REQG\",\"listItem__text\":\"dropzone_listItem__text__3HMPI\",\"iconClose\":\"dropzone_iconClose__3Ue7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"locale-editor_modal_modal__2Yhb9\",\"btns\":\"locale-editor_modal_btns__rJk_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_header_wrap__1BMGf\",\"dropZoneWrap\":\"locale-editor_header_dropZoneWrap__3JzpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_format-helper_wrap__EjLXM\",\"format\":\"locale-editor_format-helper_format__23EiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_mode_wrap__HYoxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"locale-editor_wrap_wrap__1Ie3m\"};"],"sourceRoot":""}